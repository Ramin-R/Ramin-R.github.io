{"version":3,"sources":["DateNavigation.js","Day.js","Week.js","WeekDayNames.js","Month.js","history.js","Auth.js","Login.js","Appointment.js","App.js","routes.js","index.js"],"names":["DateNavigation","props","react_default","a","createElement","className","onClick","handleMonthChange","concat","date","format","Day","data-day","day","selectedDay","handleSelectedDayChange","Week","days","map","i","src_Day","key","WeekDayNames","Month","weeks","length","unshift","isSameMonth","month","year","src_WeekDayNames","week","src_Week","createHistory","Auth","Object","classCallCheck","this","auth0","WebAuth","domain","clientID","redirectUri","responseType","scope","login","bind","logout","handleAuthentication","isAuthenticated","authorize","_this","parseHash","err","authResult","accessToken","idToken","setSession","history","replace","console","log","expiresAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","removeItem","parse","getItem","Login","route","auth","Navbar","fluid","Header","Button","bsStyle","Component","Appointment","appointments","appointment","text","moment","extendMoment","Moment","App","possibleConstructorReturn","getPrototypeOf","call","state","time","set","hour","minute","second","millisecond","firstLogin","arraysEqual","b","generateDays","start","startOf","end","endOf","range","by","weekStart","weekEnd","diff","weekRange","acc","Array","from","step","add","push","m","Number","parseInt","setState","e","target","dataset","handleAppointment","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","textInput","current","value","toConsumableArray","getAppointmentsFromServer","asyncToGenerator","regenerator_default","mark","_callee","id","rawResponse","content","wrap","_context","prev","next","jwtDecode","sub","fetch","split","sent","json","t0","stop","React","createRef","prevProps","prevState","_this2","_callee2","_context2","method","headers","Accept","Content-Type","body","src_Login","loginHandler","src_DateNavigation","src_Month","onSubmit","type","ref","required","src_Appointment","ReactDOM","render","Router","component","Route","path","exact","test","location","hash","src_App_0","assign","document","getElementById"],"mappings":"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","file":"static/js/main.558b7523.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DateNavigation = props => {\r\n    return (\r\n        <div className=\"date-nav\">\r\n            <button onClick={() => props.handleMonthChange(-1)}>{'<'}</button>\r\n            <span className=\"date-title\">{`${props.date.format(\r\n                'MMMM Y'\r\n            )}`}</span>\r\n            <button onClick={() => props.handleMonthChange(1)}>{'>'}</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DateNavigation;\r\n","import React from 'react';\r\n\r\n//moment.loadPersian({ dialect: 'persian-modern' });\r\nconst Day = props => (\r\n    <span\r\n        data-day={props.day}\r\n        className={props.selectedDay}\r\n        onClick={props.handleSelectedDayChange}\r\n    >\r\n        {props.day}\r\n    </span>\r\n);\r\n\r\nexport default Day;\r\n","import React from 'react';\r\n\r\nimport Day from './Day';\r\nconst Week = props => (\r\n    <div>\r\n        {props.days.map((day, i) => (\r\n            <Day\r\n                day={day}\r\n                key={i}\r\n                selectedDay={\r\n                    day === props.selectedDay\r\n                        ? 'selected days-of-week'\r\n                        : day === ' '\r\n                            ? 'disabled'\r\n                            : 'days-of-week'\r\n                }\r\n                handleSelectedDayChange={\r\n                    day === ' ' ? null : props.handleSelectedDayChange\r\n                }\r\n            />\r\n        ))}\r\n    </div>\r\n);\r\n\r\nexport default Week;\r\n","import React from 'react';\r\n\r\nconst WeekDayNames = () => {\r\n    return (\r\n        <div>\r\n            <span className=\"days-of-week\">Su</span>\r\n            <span className=\"days-of-week\">Mo</span>\r\n            <span className=\"days-of-week\">Tu</span>\r\n            <span className=\"days-of-week\">We</span>\r\n            <span className=\"days-of-week\">Th</span>\r\n            <span className=\"days-of-week\">Fr</span>\r\n            <span className=\"days-of-week\">Sa</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeekDayNames;\r\n","import React from 'react';\r\nimport Week from './Week';\r\nimport WeekDayNames from './WeekDayNames';\r\n\r\nconst Month = props => {\r\n    const weeks = props.weeks;\r\n    while (weeks[0].length < 7) {\r\n        weeks[0].unshift(' ');\r\n    }\r\n    const isSameMonth =\r\n        props.date.month() === props.selectedDay.month() &&\r\n        props.date.year() === props.selectedDay.year();\r\n    return (\r\n        <div className=\"month-days\">\r\n            <div>\r\n                <WeekDayNames />\r\n                {props.weeks.map((week, i) => (\r\n                    <Week\r\n                        days={week}\r\n                        key={i}\r\n                        selectedDay={\r\n                            isSameMonth ? props.selectedDay.date() : -1\r\n                        }\r\n                        handleSelectedDayChange={props.handleSelectedDayChange}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Month;\r\n","import createHistory from 'history/createBrowserHistory';\r\n\r\nexport default createHistory();\r\n","import auth0 from 'auth0-js';\r\nimport history from './history';\r\n\r\nexport default class Auth {\r\n    auth0 = new auth0.WebAuth({\r\n        domain: 'ramin-r.auth0.com',\r\n        clientID: 'Hvch6U9gYof8ZBbcvG4NnpApDFKWCa5O',\r\n        redirectUri: 'https://ramin-r.github.io/',\r\n        responseType: 'token id_token',\r\n        scope: 'openid'\r\n    });\r\n\r\n    constructor() {\r\n        this.login = this.login.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.handleAuthentication = this.handleAuthentication.bind(this);\r\n        this.isAuthenticated = this.isAuthenticated.bind(this);\r\n    }\r\n\r\n    login() {\r\n        this.auth0.authorize();\r\n    }\r\n\r\n    handleAuthentication() {\r\n        this.auth0.parseHash((err, authResult) => {\r\n            if (authResult && authResult.accessToken && authResult.idToken) {\r\n                this.setSession(authResult);\r\n                history.replace('/');\r\n            } else if (err) {\r\n                history.replace('/');\r\n                console.log(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    setSession(authResult) {\r\n        // Set the time that the Access Token will expire at\r\n        let expiresAt = JSON.stringify(\r\n            authResult.expiresIn * 1000 + new Date().getTime()\r\n        );\r\n        localStorage.setItem('access_token', authResult.accessToken);\r\n        localStorage.setItem('id_token', authResult.idToken);\r\n        localStorage.setItem('expires_at', expiresAt);\r\n        // navigate to the home route\r\n        history.replace('/');\r\n    }\r\n\r\n    logout() {\r\n        // Clear Access Token and ID Token from local storage\r\n        localStorage.removeItem('access_token');\r\n        localStorage.removeItem('id_token');\r\n        localStorage.removeItem('expires_at');\r\n        // navigate to the home route\r\n        history.replace('/');\r\n    }\r\n\r\n    isAuthenticated() {\r\n        // Check whether the current time is past the\r\n        // Access Token's expiry time\r\n        let expiresAt = JSON.parse(localStorage.getItem('expires_at'));\r\n        return new Date().getTime() < expiresAt;\r\n    }\r\n}\r\n","// import React from 'react';\r\n\r\n// const Login = props => {\r\n//     return (\r\n//         <div>\r\n//             <button onClick={props.loginHandler}>Login or Sign up</button>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Login;\r\n\r\nimport React, { Component } from 'react';\r\nimport { Navbar, Button } from 'react-bootstrap';\r\nimport './App.css';\r\n\r\nclass Login extends Component {\r\n    goTo(route) {\r\n        this.props.history.replace(`/${route}`);\r\n    }\r\n\r\n    login() {\r\n        this.props.auth.login();\r\n    }\r\n\r\n    logout() {\r\n        this.props.auth.logout();\r\n    }\r\n\r\n    render() {\r\n        const { isAuthenticated } = this.props.auth;\r\n\r\n        return (\r\n            <div>\r\n                <Navbar fluid>\r\n                    <Navbar.Header>\r\n                        {!isAuthenticated() && (\r\n                            <Button\r\n                                bsStyle=\"primary\"\r\n                                className=\"btn-margin login-btn\"\r\n                                onClick={this.login.bind(this)}\r\n                            >\r\n                                Log In\r\n                            </Button>\r\n                        )}\r\n                        {isAuthenticated() && (\r\n                            <Button\r\n                                bsStyle=\"primary\"\r\n                                className=\"btn-margin login-btn\"\r\n                                onClick={this.logout.bind(this)}\r\n                            >\r\n                                Log Out\r\n                            </Button>\r\n                        )}\r\n                    </Navbar.Header>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nconst Appointment = props => {\r\n    return (\r\n        <div>\r\n            {props.appointments.map((appointment, i) => (\r\n                <div key={i} className=\"appointments\">\r\n                    <h2>{appointment.date}</h2>\r\n                    <p>{appointment.text}</p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Appointment;\r\n","import React, { Component } from 'react';\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nimport DateNavigation from './DateNavigation';\nimport './App.css';\nimport './AppMobile.css';\nimport Month from './Month';\nimport Auth from './Auth.js';\nimport Login from './Login';\nimport Appointments from './Appointment';\nimport jwtDecode from 'jwt-decode';\nconst moment = extendMoment(Moment);\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.textInput = React.createRef();\n    }\n    state = {\n        time: moment().set({ hour: 0, minute: 0, second: 0, millisecond: 0 }),\n        selectedDay: moment().set({\n            hour: 0,\n            minute: 0,\n            second: 0,\n            millisecond: 0\n        }),\n        appointments: [],\n        firstLogin: true\n    };\n\n    arraysEqual = (a, b) => {\n        if (a === b) return true;\n        if (a === null || b === null) return false;\n        if (a.length !== b.length) return false;\n        for (let i = 0; i < a.length; ++i) {\n            if (a[i] !== b[i]) return false;\n        }\n        return true;\n    };\n\n    generateDays = () => {\n        let start = moment(this.state.time).startOf('month');\n        const end = moment(this.state.time).endOf('month');\n        const range = moment.range(start, end);\n\n        const weeks = [];\n        range.by('days');\n        let i = 0;\n        do {\n            let weekStart = moment(start).startOf('week');\n            let weekEnd = moment(start).endOf('week');\n            if (i === 0) {\n                weekStart = start;\n            }\n            if (i !== 0 && end.diff(start, 'days') < 7) {\n                weekEnd = end;\n            }\n            const weekRange = moment.range(weekStart, weekEnd);\n            let acc = Array.from(weekRange.by('days', { step: 1 }));\n            start = weekEnd.add(1, 'day');\n            weeks.push(acc.map(m => Number.parseInt(m.date())));\n            i++;\n        } while (end.diff(start, 'days') > 0);\n\n        return weeks;\n    };\n    componentDidMount() {\n        this.generateDays();\n        if (this.state.firstLogin && this.props.auth.isAuthenticated()) {\n            this.getAppointmentsFromServer();\n        }\n    }\n    handleMonthChange = i => {\n        const time = moment(this.state.time);\n        time.add(i, 'month');\n        this.setState({\n            time\n        });\n    };\n    handleSelectedDayChange = e => {\n        const day = e.target.dataset.day;\n\n        const selectedDay = this.state.time.date(day);\n        this.setState({\n            selectedDay\n        });\n    };\n    handleAppointment = e => {\n        e.preventDefault();\n        e.stopPropagation();\n        e.nativeEvent.stopImmediatePropagation();\n        const text = this.textInput.current.value;\n        const date = this.state.selectedDay.format('MMMM D Y');\n        this.setState({\n            appointments: [...this.state.appointments, { date, text }]\n        });\n        this.textInput.current.value = '';\n    };\n    getAppointmentsFromServer = async () => {\n        try {\n            let id = jwtDecode(localStorage.getItem('id_token')).sub;\n            const rawResponse = await fetch(\n                `https://reactcalendar-ramin.herokuapp.com/${id.split('|')[1]}`\n            );\n            const content = await rawResponse.json();\n\n            this.setState({\n                firstLogin: false,\n                appointments: content.appointments\n            });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n    componentDidUpdate(prevProps, prevState) {\n        let id;\n        if (\n            !this.arraysEqual(\n                prevState.appointments,\n                this.state.appointments\n            ) &&\n            this.props.auth.isAuthenticated()\n        ) {\n            //https://reactcalendar-ramin.herokuapp.com\n            id = jwtDecode(localStorage.getItem('id_token')).sub;\n            (async () => {\n                await fetch(\n                    `https://reactcalendar-ramin.herokuapp.com//${\n                        id.split('|')[1]\n                    }`,\n                    {\n                        method: 'POST',\n                        headers: {\n                            Accept: 'application/json',\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({\n                            appointments: this.state.appointments\n                        })\n                    }\n                );\n            })();\n        }\n\n        if (this.props.auth.isAuthenticated() && this.state.firstLogin) {\n            id = jwtDecode(localStorage.getItem('id_token')).sub;\n            this.getAppointmentsFromServer();\n        }\n    }\n    render() {\n        const auth = new Auth();\n        return (\n            <div>\n                <nav className=\"nav-bar\">\n                    <ul>\n                        <li>\n                            <h1>React Calendar</h1>\n                        </li>\n                        <li>\n                            <Login\n                                auth={auth}\n                                loginHandler={this.loginHandler}\n                            />\n                        </li>\n                    </ul>\n                </nav>\n\n                <DateNavigation\n                    handleMonthChange={this.handleMonthChange}\n                    date={this.state.time}\n                />\n                <Month\n                    date={this.state.time}\n                    weeks={this.generateDays()}\n                    selectedDay={this.state.selectedDay}\n                    handleSelectedDayChange={this.handleSelectedDayChange}\n                />\n                <form onSubmit={this.handleAppointment}>\n                    <input\n                        type=\"text\"\n                        ref={this.textInput}\n                        className=\"appointment-input\"\n                        required\n                    />\n                    <button className=\"make-appoint-btn\">\n                        Make Appointment\n                    </button>\n                </form>\n\n                <Appointments appointments={this.state.appointments} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\r\nimport { Route, Router } from 'react-router-dom';\r\nimport App from './App';\r\nimport Callback from './Callback';\r\nimport Auth from './Auth';\r\nimport history from './history';\r\n\r\nconst auth = new Auth();\r\n\r\nconst handleAuthentication = (nextState, replace) => {\r\n    if (/access_token|id_token|error/.test(nextState.location.hash)) {\r\n        auth.handleAuthentication();\r\n    }\r\n};\r\n\r\nexport const makeMainRoutes = () => {\r\n    return (\r\n        <Router history={history} component={App}>\r\n            <div>\r\n                <Route\r\n                    path=\"/\"\r\n                    exact\r\n                    render={props => {\r\n                        handleAuthentication(props);\r\n                        return <App auth={auth} {...props} />;\r\n                    }}\r\n                />\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n","import ReactDOM from 'react-dom';\nimport { makeMainRoutes } from './routes';\n\n// ReactDOM.render(\n//     <BrowserRouter>\n//         <Switch>\n//             <Route path=\"/\" exact component={App} />\n//             <Route path=\"/callback#:token\" component={Callback} />\n//         </Switch>\n//     </BrowserRouter>,\n//     document.getElementById('root')\n// );\n\nReactDOM.render(makeMainRoutes(), document.getElementById('root'));\n"],"sourceRoot":""}